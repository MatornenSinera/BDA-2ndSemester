import pandas
import ast
import collections
import networkx as nx 
import matplotlib.pyplot as plt
import pydot
import random as rd
import numpy as np
from numba import jit
import math


a=[4.451336461946542, 5.304779238435646, 5.6768081923739375, 5.970379587802936, 6.154108855247109, 6.276991431906501, 6.416712254936544, 6.508226433542127, 6.633524823318767, 6.714314524942347, 6.796915970370513, 6.894631747015573, 6.93112924679481, 6.963031072179476, 7.048058492877251, 7.104243143394436, 7.117876605918724, 7.178723807409897, 7.224708492739348, 7.262896100062006]
b=[9, 10, 10, 12, 11, 13, 13, 12, 12, 13, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13]
c=[100.0, 305.0, 511.0, 716.0, 921.0, 1126.0, 1332.0, 1537.0, 1742.0, 1947.0, 2153.0, 2358.0, 2563.0, 2768.0, 2974.0, 3179.0, 3384.0, 3589.0, 3795.0, 4000.0]
d=[3.3219280948873626, 4.126332716225124, 4.498589740468811, 4.741907888632128, 4.923528673045668, 5.068495556040115, 5.189689183535632, 5.292950724845386, 5.383264454299432, 5.4635185843601475, 5.536066302083617, 5.601674001489882, 5.661808881645789, 5.717314113818363, 5.76909446602621, 5.817178650568988, 5.862256926559975, 5.904683103908039, 5.944942085151415, 5.9828921423310435]

b2=np.asarray(b)
d2=np.asarray(d)
bfit=np.polyfit(d2, b2, 1)
b2fit=[bfit[0]*i+bfit[1] for i in d]

plt.plot(d, b2, d, b2fit, d, a)
plt.legend(["Diameter of graph", "Fitted diameter of graph - linear regression", "Average path length"])
plt.xlabel("Ln(N)/Ln(<k>)")
plt.show()

print(bfit)